server:
  tomcat:
    uri-encoding: UTF-8
    threads:
      max: 200
      min-spare: 30
    connection-timeout: 5000ms
  port: 8080
  servlet:
    context-path: /emos-wx-api

spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DB_NAME}?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
      username: ${MYSQL_USERNAME}
      password: ${MYSQL_PASSWORD}
      initial-size: 8
      max-active: 16
      min-idle: 8
      max-wait: 60000
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false

  redis:
    database: 0
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
    jedis:
      pool:
        max-active: 1000
        max-wait: -1ms
        max-idle: 16
        min-idle: 8

  data:
    mongodb:
      host: ${MONGODB_HOST}
      port: ${MONGODB_PORT}
      database: ${MONGODB_DB_NAME}

  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    protocol: ${MAIL_PROTOCOL}
    properties:
      mail:
        smtp:
          ssl:
            enable: true
    default-encoding: UTF-8

mybatis:
  mapper-locations: classpath*:mapper/*.xml
  type-aliases-package: com.example.emos.wx.db.pojo
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true

logging:
  level:
    root: info
    com.example.emos.wx.db.dao : warn
  pattern:
    console: "%d{HH:mm:ss}  %-5level  %msg%n"

emos:
  jwt:
    secret: ${JWT_SECRET}
    expire: 5
    cache-expire: 10
  face:
    createFaceModelUrl: ${FACE_CREATE_MODEL_URL}
    checkinUrl: ${FACE_CHECKIN_URL}
  email:
    system: ${MAIL_USERNAME}
    hr: ${MAIL_USERNAME}
  image-folder: ${LOCAL_IMAGE_URL}
  code: ${ACCESS_CODE}
  receiveNotify: ${RECEIVE_NOTIFY}
workflow:
  url: ${WORKFLOW_URL}

wx:
  app-id: ${QX_APP_ID}
  app-secret: ${QX_APP_SECRET}

trtc:
  appid: ${TRTC_APP_ID}
  key: ${TRTC_KEY}
  expire: ${TRTC_EXPIRE}

rabbitmq:
  host: ${RABBITMQ_HOST}
  port: ${RABBITMQ_PORT}

